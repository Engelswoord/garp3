desc "Check if a grunt build is necessary"
task :check_grunt_status do 
	run_locally do
		has_grunt = capture('[ -e "Gruntfile" ] && echo 1 || echo 0').strip == '1'
		if has_grunt
			env = fetch(:stage)
			branch = fetch(:branch)
			
			if !is_git_status_clean self
				error "Your Git status is not clean.\nPlease commit "\
					"everything before deploying this Grunt-enabled project."
				exit
			end

			warn "WARNING! Switching to Git branch [#{branch}]"
			execute "git checkout #{branch}"

			#
			#execute "grunt #{env}"
			
			if !is_git_status_clean self
				error "Your compiled assets are not up-to-date.\n"/
					"Please commit the Grunt output and try deploying again."
				exit
			end

		end
	end

	exit
end

def is_git_status_clean cap
	cap.capture("git status --porcelain 2>/dev/null | grep -c '^.[M\?]'").strip == '0'
end
