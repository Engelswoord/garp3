<?php
$xType 	= $this->spawnJs()->getFieldType($this->field);
$vType 	= $this->spawnJs()->getFieldValidationType($this->field);
$plugin = $this->spawnJs()->getFieldPlugin($this->field);

$props = array();

$props[] = "name: '{$this->field->name}'";
$props[] = "fieldLabel: __('{$this->field->label}')";
$props[] = "disabled: ".($this->field->editable ? 'false' : 'true');
$props[] = "hidden: ".($this->field->visible ? 'false' : 'true');

switch ($this->field->type) {
	case 'enum':
		$props[] = "editable: false";
		$props[] = "mode: 'local'";
		if (key($this->field->options) === 0) {
			$options = $this->field->options;
			if (!$this->field->required) {
				array_unshift($options, null);
			}
			$props[] = "store: ['".implode($options, "', '")."']";
		} else {
			$labeledEnumOptions = array();
			if (!$this->field->required) {
				$labeledEnumOptions[] = "[null, __('(empty)')]";
			}
			foreach ($this->field->options as $value => $label) {
				$labeledEnumOptions[] = "['{$value}', __('{$label}')]";
			}
			$options = $labeledEnumOptions;
			$props[] = "store: [".implode($options, ", ")."]";
		}
	break;
	case 'html':
		if ($this->field->rich) {
			$props[] = 'enableSourceEdit: false';
		} else {
			array_push($props,
				'enableMedia: false',      
				'enableHeading: false',
				'enableSourceEdit: false',
				'enableEmbed: false',
				'enableAlignments: false',
				'enableColors: false',
				'enableFont: false',
				'enableFontSize: false',
				'enableUnderline: false',
				'enableBlockQuote: false',
				'enableDefinitionList: false',
				'height: 200'
			);
		}
	break;
	case 'numeric':
		if (!$this->field->float) {
			$props[] = 'allowDecimals: false';
		}
	break;
	case 'document':
		$props[] = 'emptyText: __(\'Drag file here, or click browse button\')';
		$props[] = 'uploadURL: BASE + \'g/content/upload/type/document\'';
		$props[] = 'ref: \'../../../../filename\'';
		
		$ini = Garp_Cache_Ini::factory(APPLICATION_PATH.'/configs/application.ini');
		$extensionString = $ini->cdn->extensions;
		$extensions = explode(',', $extensionString);
		$allowedExtensions = array_filter($extensions, function($element) {
			$excludedExtensions = array('jpg', 'jpeg', 'gif', 'png');
			return !in_array($element, $excludedExtensions);
		});
		$allowedExtensionString = "'" . implode('\',\'', $allowedExtensions) . "'";
		$props[] = 	"supportedExtensions: [{$allowedExtensionString}]";
	break;
	case 'imagefile':
		$props[] = 'emptyText: __(\'Drag file here, or click browse button\')';
		$props[] = 'uploadURL: BASE + \'g/content/upload/type/image\'';
		$props[] = 'ref: \'../../../../filename\'';
		
		$ini = Garp_Cache_Ini::factory(APPLICATION_PATH.'/configs/application.ini');
		$extensionString = $ini->cdn->extensions;
		$extensions = explode(',', $extensionString);
		$allowedExtensions = array_filter($extensions, function($element) {
			$imageExtensions = array('jpg', 'jpeg', 'gif', 'png');
			return in_array($element, $imageExtensions);
		});
		$allowedExtensionString = "'" . implode('\',\'', $allowedExtensions) . "'";
		$props[] = 	"supportedExtensions: [{$allowedExtensionString}]";
	break;
}

if ($this->field->maxLength && $this->field->type !== 'enum') {
	$props[] = "maxLength: {$this->field->maxLength}";
}

$props[] = "allowBlank: ".($this->field->required ? 'false' : 'true');

$props[] = "xtype: '{$xType}'";
if ($vType)
	$props[] = "vtype: '{$vType}'";
if ($plugin)
	$props[] = "plugins: [{$plugin}]";
?>
				<?php echo implode(",\n\t\t\t\t", $props); ?>
				<?php if ($this->field->info): ?>
			}, {
			<?php
				echo $this->partial('partials/spawn/js/input-field-caption.phtml', 'g', array(
					'text' => "__('" . addslashes($this->field->info) . "')",
					'fieldName' => $this->field->name
				));
			endif; ?>
				<?php if ($this->field->type === 'document' || $this->field->type === 'imagefile'): ?>
			}, {
			<?php
				$allowedExtensionsExceptLast = array_slice($allowedExtensions, 0, -1);
				$allowedLastExtension = current(array_slice($allowedExtensions, -1));
				$file = new Garp_File();
				$uploadLimitInMbs = round($file->getUploadMaxFilesize());

				echo $this->partial('partials/spawn/js/input-field-caption.phtml', 'g', array(
					'text' => "__('Only {1} and {2} files with a maximum of {3} MB are allowed', '" . implode(', ', $allowedExtensionsExceptLast) . "', '" . $allowedLastExtension . "', '" . $uploadLimitInMbs . "')",
					'fieldName' => $this->field->name
				));
			endif; ?>
